{"version":3,"sources":["scripts/main.js"],"names":["firstResolveMessage","secondResolveMessage","thirdResolveMessage","rejectMessage","createElement","message","className","notification","document","classList","add","dataset","qa","textContent","body","append","success","text","error","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","thirdPromise","leftClick","rightClick","all","then","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAsB,6BACtBC,EAAuB,8BACvBC,EAAsB,6BACtBC,EAAgB,6BAEtB,SAASC,EAAcC,EAASC,GACxBC,IAAAA,EAAeC,SAASJ,cAAc,OAE5CG,EAAaE,UAAUC,IAAIJ,GAC3BC,EAAaI,QAAQC,GAAK,eAC1BL,EAAaM,YAAcR,EAC3BG,SAASM,KAAKC,OAAOR,GAGvB,SAASS,EAAQC,GACfb,EAAca,EAAM,WAGtB,SAASC,EAAMD,GACbb,EAAca,EAAM,WAGtB,IAAME,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCd,SAASe,iBAAiB,QAAS,WACjCF,EAAQrB,KAGVwB,WAAW,WAAMF,OAAAA,EAAO,IAAIG,MAAMtB,KAAiB,OAG/CuB,EAAgB,IAAIN,QAAQ,SAAAC,GAChCb,SAASe,iBAAiB,QAAS,WACjCF,EAAQpB,KAGVO,SAASe,iBAAiB,cAAe,WACvCF,EAAQpB,OAIN0B,EAAe,IAAIP,QAAQ,SAAAC,GAEzBO,IAAAA,EAAY,IAAIR,QAAQ,SAAAC,GAC5Bb,SAASe,iBAAiB,QAAS,WACjCF,QAIEQ,EAAa,IAAIT,QAAQ,SAAAC,GAC7Bb,OAAAA,SAASe,iBAAiB,cAAe,WACvCF,QAGJD,QAAQU,IAAI,CAACF,EAAWC,IAAaE,KAAK,WACxCV,EAAQnB,OAIZiB,EAAaY,KAAKf,GAASgB,MAAMd,GACjCQ,EAAcK,KAAKf,GACnBW,EAAaI,KAAKf","file":"main.2fe9b50a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst firstResolveMessage = 'First promise was resolved';\nconst secondResolveMessage = 'Second promise was resolved';\nconst thirdResolveMessage = 'Third promise was resolved';\nconst rejectMessage = 'First promise was rejected';\n\nfunction createElement(message, className) {\n  const notification = document.createElement('div');\n\n  notification.classList.add(className);\n  notification.dataset.qa = 'notification';\n  notification.textContent = message;\n  document.body.append(notification);\n}\n\nfunction success(text) {\n  createElement(text, 'success');\n}\n\nfunction error(text) {\n  createElement(text, 'warning');\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve(firstResolveMessage);\n  });\n\n  setTimeout(() => reject(new Error(rejectMessage)), 3000);\n});\n\nconst secondPromise = new Promise(resolve => {\n  document.addEventListener('click', () => {\n    resolve(secondResolveMessage);\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve(secondResolveMessage);\n  });\n});\n\nconst thirdPromise = new Promise(resolve => {\n\n  const leftClick = new Promise(resolve => {\n    document.addEventListener('click', () => {\n      resolve();\n    });\n  });\n\n  const rightClick = new Promise(resolve =>\n    document.addEventListener('contextmenu', () => {\n      resolve();\n    }));\n\n  Promise.all([leftClick, rightClick]).then(() => {\n    resolve(thirdResolveMessage);\n  });\n});\n\nfirstPromise.then(success).catch(error);\nsecondPromise.then(success);\nthirdPromise.then(success);\n"]}